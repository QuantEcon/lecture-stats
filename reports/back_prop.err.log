Traceback (most recent call last):
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig = go.Figure()
fig.add_trace(go.Scatter(x=grid, y=f_val, name=r'$-3x+2$'))
fig.add_trace(go.Scatter(x=grid, y=predictions, name='Approximation'))

# Export to PNG file
Image(fig.to_image(format="png"))
# fig.show() will provide interactive plot when running
# notebook locally
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[21], line 6[0m
[1;32m      3[0m fig[38;5;241m.[39madd_trace(go[38;5;241m.[39mScatter(x[38;5;241m=[39mgrid, y[38;5;241m=[39mpredictions, name[38;5;241m=[39m[38;5;124m'[39m[38;5;124mApproximation[39m[38;5;124m'[39m))
[1;32m      5[0m [38;5;66;03m# Export to PNG file[39;00m
[0;32m----> 6[0m Image([43mfig[49m[38;5;241;43m.[39;49m[43mto_image[49m[43m([49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mpng[39;49m[38;5;124;43m"[39;49m[43m)[49m)

File [0;32m~/anaconda3/envs/quantecon/lib/python3.9/site-packages/plotly/basedatatypes.py:3766[0m, in [0;36mBaseFigure.to_image[0;34m(self, *args, **kwargs)[0m
[1;32m   3711[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m   3712[0m [38;5;124;03mConvert a figure to a static image bytes string[39;00m
[1;32m   3713[0m 
[0;32m   (...)[0m
[1;32m   3762[0m [38;5;124;03m    The image data[39;00m
[1;32m   3763[0m [38;5;124;03m"""[39;00m
[1;32m   3764[0m [38;5;28;01mimport[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mio[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpio[39;00m
[0;32m-> 3766[0m [38;5;28;01mreturn[39;00m [43mpio[49m[38;5;241;43m.[39;49m[43mto_image[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.9/site-packages/plotly/io/_kaleido.py:144[0m, in [0;36mto_image[0;34m(fig, format, width, height, scale, validate, engine)[0m
[1;32m    141[0m [38;5;66;03m# Validate figure[39;00m
[1;32m    142[0m [38;5;66;03m# ---------------[39;00m
[1;32m    143[0m fig_dict [38;5;241m=[39m validate_coerce_fig_to_dict(fig, validate)
[0;32m--> 144[0m img_bytes [38;5;241m=[39m [43mscope[49m[38;5;241;43m.[39;49m[43mtransform[49m[43m([49m
[1;32m    145[0m [43m    [49m[43mfig_dict[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[43mwidth[49m[38;5;241;43m=[39;49m[43mwidth[49m[43m,[49m[43m [49m[43mheight[49m[38;5;241;43m=[39;49m[43mheight[49m[43m,[49m[43m [49m[43mscale[49m[38;5;241;43m=[39;49m[43mscale[49m
[1;32m    146[0m [43m[49m[43m)[49m
[1;32m    148[0m [38;5;28;01mreturn[39;00m img_bytes

File [0;32m~/anaconda3/envs/quantecon/lib/python3.9/site-packages/kaleido/scopes/plotly.py:153[0m, in [0;36mPlotlyScope.transform[0;34m(self, figure, format, width, height, scale)[0m
[1;32m    142[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    143[0m         [38;5;124m"[39m[38;5;124mInvalid format [39m[38;5;124m'[39m[38;5;132;01m{original_format}[39;00m[38;5;124m'[39m[38;5;124m.[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[1;32m    144[0m         [38;5;124m"[39m[38;5;124m    Supported formats: [39m[38;5;132;01m{supported_formats_str}[39;00m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m    148[0m         )
[1;32m    149[0m     )
[1;32m    151[0m [38;5;66;03m# Transform in using _perform_transform rather than superclass so we can access the full[39;00m
[1;32m    152[0m [38;5;66;03m# response dict, including error codes.[39;00m
[0;32m--> 153[0m response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_perform_transform[49m[43m([49m
[1;32m    154[0m [43m    [49m[43mfigure[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[43mwidth[49m[38;5;241;43m=[39;49m[43mwidth[49m[43m,[49m[43m [49m[43mheight[49m[38;5;241;43m=[39;49m[43mheight[49m[43m,[49m[43m [49m[43mscale[49m[38;5;241;43m=[39;49m[43mscale[49m
[1;32m    155[0m [43m[49m[43m)[49m
[1;32m    157[0m [38;5;66;03m# Check for export error, later can customize error messages for plotly Python users[39;00m
[1;32m    158[0m code [38;5;241m=[39m response[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mcode[39m[38;5;124m"[39m, [38;5;241m0[39m)

File [0;32m~/anaconda3/envs/quantecon/lib/python3.9/site-packages/kaleido/scopes/base.py:293[0m, in [0;36mBaseScope._perform_transform[0;34m(self, data, **kwargs)[0m
[1;32m    284[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    285[0m [38;5;124;03mTransform input data using the current scope, returning dict response with error code[39;00m
[1;32m    286[0m [38;5;124;03mwhether successful or not.[39;00m
[0;32m   (...)[0m
[1;32m    290[0m [38;5;124;03m:return: Dict of response from Kaleido executable, whether successful or not[39;00m
[1;32m    291[0m [38;5;124;03m"""[39;00m
[1;32m    292[0m [38;5;66;03m# Ensure that kaleido subprocess is running[39;00m
[0;32m--> 293[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_ensure_kaleido[49m[43m([49m[43m)[49m
[1;32m    295[0m [38;5;66;03m# Perform export[39;00m
[1;32m    296[0m export_spec [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_json_dumps([38;5;28mdict[39m(kwargs, data[38;5;241m=[39mdata))[38;5;241m.[39mencode([38;5;124m'[39m[38;5;124mutf-8[39m[38;5;124m'[39m)

File [0;32m~/anaconda3/envs/quantecon/lib/python3.9/site-packages/kaleido/scopes/base.py:198[0m, in [0;36mBaseScope._ensure_kaleido[0;34m(self)[0m
[1;32m    193[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m startup_response_string:
[1;32m    194[0m     message [38;5;241m=[39m (
[1;32m    195[0m         [38;5;124m"[39m[38;5;124mFailed to start Kaleido subprocess. Error stream:[39m[38;5;130;01m\n[39;00m[38;5;130;01m\n[39;00m[38;5;124m"[39m [38;5;241m+[39m
[1;32m    196[0m         [38;5;28mself[39m[38;5;241m.[39m_get_decoded_std_error()
[1;32m    197[0m     )
[0;32m--> 198[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(message)
[1;32m    199[0m [38;5;28;01melse[39;00m:
[1;32m    200[0m     startup_response [38;5;241m=[39m json[38;5;241m.[39mloads(startup_response_string)

[0;31mValueError[0m: Failed to start Kaleido subprocess. Error stream:

/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/kaleido/executable/kaleido: line 5: ./bin/kaleido: No such file or directory

ValueError: Failed to start Kaleido subprocess. Error stream:

/Users/humphreyyang/anaconda3/envs/quantecon/lib/python3.9/site-packages/kaleido/executable/kaleido: line 5: ./bin/kaleido: No such file or directory


